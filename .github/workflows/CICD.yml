# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: React CI

on:
  push:
    branches: ["main"]
  

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
       os: [ubuntu-latest]
       node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      

# https://github.com/JamesIves/github-pages-deploy-action
  Deploy: 
    permissions: 
      contents: write
    runs-on: ubuntu-latest
    # needs: build
    steps:
     - name: Checkout 🛎️😎
       uses: actions/checkout@v3

     - name: Install and Build 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
       run: |
          npm ci
          npm run build

     - name: Deploy 🚀
       uses: JamesIves/github-pages-deploy-action@v4
       with:
        branch: gh-pages
        folder: build


# https://github.com/marketplace/actions/docker-build-push-action
  Docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name : Dependencies
        run: npm ci

      - name : Build
        run: npm run build

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag 0766537018/myapptest01:latest
        
      - name: Push to Docker Hub
        run: docker push 0766537018/myapptest01:latest


