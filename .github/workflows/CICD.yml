# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: React CI

on:
  push:
    branches: ["main"]
  

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
       os: [ubuntu-latest]
       node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      

  Docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name : Dependencies
        run: npm ci

      - name : Build
        run: npm run build

      - name: Save version
        id: version
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))
        
      - name: Increase version
        run: npm version patch
        
      - name: Push new version
        run: git push
      
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ziermann/tut:${{steps.version.outputs.tag}}
        
      - name: Push to Docker Hub
        run: docker push ziermann/tut:${{steps.version.outputs.tag}}


# https://github.com/marketplace/actions/docker-build-push-action
